library(tidyverse)      # data manipulation & plotting
library(stringr)        # text cleaning and regular expressions
library(tidytext)       # provides additional text mining functions
library(harrypotter)    # provides the first seven novels of the Harry Potter series
if (packageVersion("devtools") < 1.6) {
install.packages("devtools")
}
devtools::install_github("bradleyboehmke/harrypotter")
library(tidyverse)      # data manipulation & plotting
library(stringr)        # text cleaning and regular expressions
library(tidytext)       # provides additional text mining functions
library(harrypotter)    # provides the first seven novels of the Harry Potter series
philosopher
philosophers_stone
text_tb <- tibble(chapter = length(philosophers_stone),
text = philosophers_stone)
text_tb
text_tb <- tibble(chapter = seq_along(philosophers_stone),
text = philosophers_stone)
text_tb
text_tb %>%
unnest_tokens(word, text)
titles <- c("Philosopher's Stone", "Chamber of Secrets", "Prisoner of Azkaban",
"Goblet of Fire", "Order of the Phoenix", "Half-Blood Prince",
"Deathly Hallows")
books <- list(philosophers_stone, chamber_of_secrets, prisoner_of_azkaban,
goblet_of_fire, order_of_the_phoenix, half_blood_prince,
deathly_hallows)
series <- tibble()
for(i in seq_along(titles)) {
clean <- tibble(chapter = seq_along(books[i]),
text = books[i]) %>%
unnest_tokens(word, text) %>%
mutate(book = titles[i]) %>%
select(book, everything())
series <- rbind(series, clean)
}
tibble(chapter = seq_along(books[i]),
text = books[i])
tibble(chapter = seq_along(books[[i]]),
text = books[[i]])
titles <- c("Philosopher's Stone", "Chamber of Secrets", "Prisoner of Azkaban",
"Goblet of Fire", "Order of the Phoenix", "Half-Blood Prince",
"Deathly Hallows")
books <- list(philosophers_stone, chamber_of_secrets, prisoner_of_azkaban,
goblet_of_fire, order_of_the_phoenix, half_blood_prince,
deathly_hallows)
series <- tibble()
for(i in seq_along(titles)) {
clean <- tibble(chapter = seq_along(books[[i]]),
text = books[[i]]) %>%
unnest_tokens(word, text) %>%
mutate(book = titles[i]) %>%
select(book, everything())
series <- rbind(series, clean)
}
series$book <- factor(series$book, levels = rev(titles))
series
series %>%
count(word, sort = TRUE)
series %>%
count(word, sort = TRUE)
series %>%
anti_join(stop_words) %>%
count(word, sort = TRUE)
series %>%
anti_join(stop_words) %>%
group_by(book) %>%
count(word, sort = TRUE) %>%
top_n(10)
series %>%
anti_join(stop_words) %>%
group_by(book) %>%
count(word, sort = TRUE) %>%
arrange(book, word)
# top 10 most common words in each book
series %>%
anti_join(stop_words) %>%
group_by(book) %>%
count(word, sort = TRUE) %>%
top_n(10)
# top 10 most common words in each book
series %>%
anti_join(stop_words) %>%
group_by(book) %>%
count(word, sort = TRUE) %>%
top_n(10) %>%
ggplot(aes(word, n, fill = book)) +
geom_bar() +
facet_wrap(~ book) +
coord_flip()
# top 10 most common words in each book
series %>%
anti_join(stop_words) %>%
group_by(book) %>%
count(word, sort = TRUE) %>%
top_n(10) %>%
ggplot(aes(word, n, fill = book)) +
geom_bar(stat = "identity") +
facet_wrap(~ book) +
coord_flip()
# top 10 most common words in each book
series %>%
anti_join(stop_words) %>%
group_by(book) %>%
count(word, sort = TRUE) %>%
top_n(10) %>%
mutate(book = factor(book, levels = books)) %>%
ggplot(aes(word, n, fill = book)) +
geom_bar(stat = "identity") +
facet_wrap(~ book) +
coord_flip() +
theme(legend.position="none")
# top 10 most common words in each book
series %>%
anti_join(stop_words) %>%
group_by(book) %>%
count(word, sort = TRUE) %>%
top_n(10) %>%
ungroup() %>%
mutate(book = factor(book, levels = books)) %>%
ggplot(aes(word, n, fill = book)) +
geom_bar(stat = "identity") +
facet_wrap(~ book) +
coord_flip() +
theme(legend.position="none")
series %>%
anti_join(stop_words) %>%
group_by(book) %>%
count(word, sort = TRUE) %>%
top_n(10) %>%
ungroup()
series %>%
anti_join(stop_words) %>%
group_by(book) %>%
count(word, sort = TRUE) %>%
top_n(10) %>%
ungroup() %>%
mutate(book = factor(book, levels = books))
# top 10 most common words in each book
series %>%
anti_join(stop_words) %>%
group_by(book) %>%
count(word, sort = TRUE) %>%
top_n(10) %>%
ungroup() %>%
mutate(book = factor(book, levels = titles)) %>%
ggplot(aes(word, n, fill = book)) +
geom_bar(stat = "identity") +
facet_wrap(~ book) +
coord_flip() +
theme(legend.position="none")
# top 10 most common words in each book
series %>%
anti_join(stop_words) %>%
group_by(book) %>%
count(word, sort = TRUE) %>%
top_n(10) %>%
ungroup() %>%
mutate(book = factor(book, levels = titles)) %>%
ggplot(aes(word, n, fill = book)) +
geom_bar(stat = "identity") +
facet_wrap(~ book, scales = "free_y") +
coord_flip() +
theme(legend.position="none")
series %>%
anti_join(stop_words) %>%
group_by(book) %>%
count(word, sort = TRUE) %>%
top_n(10) %>%
ungroup()
series %>%
anti_join(stop_words) %>%
group_by(book) %>%
count(word, sort = TRUE) %>%
top_n(10) %>%
ungroup() %>%
mutate(book = factor(book, levels = titles),
text_order = 1:nrow())
series %>%
anti_join(stop_words) %>%
group_by(book) %>%
count(word, sort = TRUE) %>%
top_n(10) %>%
ungroup() %>%
mutate(book = factor(book, levels = titles),
text_order = 1:nrow(.))
# top 10 most common words in each book
series %>%
anti_join(stop_words) %>%
group_by(book) %>%
count(word, sort = TRUE) %>%
top_n(10) %>%
ungroup() %>%
mutate(book = factor(book, levels = titles),
text_order = 1:nrow(.)) %>%
ggplot(aes(reorder(word, text_order), n, fill = book)) +
geom_bar(stat = "identity") +
facet_wrap(~ book, scales = "free_y") +
coord_flip() +
theme(legend.position="none")
# top 10 most common words in each book
series %>%
anti_join(stop_words) %>%
group_by(book) %>%
count(word, sort = TRUE) %>%
top_n(10) %>%
ungroup() %>%
mutate(book = factor(book, levels = titles),
text_order = nrow(.):1) %>%
ggplot(aes(reorder(word, text_order), n, fill = book)) +
geom_bar(stat = "identity") +
facet_wrap(~ book, scales = "free_y") +
coord_flip() +
theme(legend.position="none")
# top 10 most common words in each book
series %>%
anti_join(stop_words) %>%
group_by(book) %>%
count(word, sort = TRUE) %>%
top_n(10) %>%
ungroup() %>%
mutate(book = factor(book, levels = titles),
text_order = nrow(.):1) %>%
ggplot(aes(text_order, n, fill = book)) +
geom_bar(stat = "identity") +
facet_wrap(~ book, scales = "free_y") +
coord_flip() +
theme(legend.position="none")
# top 10 most common words in each book
series %>%
anti_join(stop_words) %>%
group_by(book) %>%
count(word, sort = TRUE) %>%
top_n(10) %>%
ungroup() %>%
mutate(book = factor(book, levels = titles),
text_order = factor(nrow(.):1)) %>%
ggplot(aes(text_order, n, fill = book)) +
geom_bar(stat = "identity") +
facet_wrap(~ book, scales = "free_y") +
coord_flip() +
theme(legend.position="none")
?scale_x_discrete
series %>%
anti_join(stop_words) %>%
group_by(book) %>%
count(word, sort = TRUE) %>%
top_n(10) %>%
ungroup() %>%
mutate(book = factor(book, levels = titles),
text_order = factor(nrow(.):1))
# top 10 most common words in each book
series %>%
anti_join(stop_words) %>%
group_by(book) %>%
count(word, sort = TRUE) %>%
top_n(10) %>%
ungroup() %>%
mutate(book = factor(book, levels = titles),
text_order = factor(nrow(.):1)) %>%
ggplot(aes(text_order, n, fill = book)) +
geom_bar(stat = "identity") +
facet_wrap(~ book, scales = "free_y") +
scale_x_discrete(labels = word) +
coord_flip() +
theme(legend.position="none")
# top 10 most common words in each book
series %>%
anti_join(stop_words) %>%
group_by(book) %>%
count(word, sort = TRUE) %>%
top_n(10) %>%
ungroup() %>%
mutate(book = factor(book, levels = titles),
text_order = factor(nrow(.):1)) %>%
ggplot(aes(text_order, n, fill = book)) +
geom_bar(stat = "identity") +
facet_wrap(~ book, scales = "free_y") +
scale_x_discrete(values = word) +
coord_flip() +
theme(legend.position="none")
# top 10 most common words in each book
series %>%
anti_join(stop_words) %>%
group_by(book) %>%
count(word, sort = TRUE) %>%
top_n(10) %>%
ungroup() %>%
mutate(book = factor(book, levels = titles),
text_order = factor(nrow(.):1)) %>%
ggplot(aes(text_order, n, fill = book)) +
geom_bar(stat = "identity") +
facet_wrap(~ book, scales = "free_y") +
scale_x_discrete(limits = word) +
coord_flip() +
theme(legend.position="none")
# top 10 most common words in each book
series %>%
anti_join(stop_words) %>%
group_by(book) %>%
count(word, sort = TRUE) %>%
top_n(10) %>%
ungroup() %>%
mutate(book = factor(book, levels = titles),
text_order = factor(nrow(.):1)) %>%
ggplot(aes(text_order, n, fill = book)) +
geom_bar(stat = "identity") +
facet_wrap(~ book, scales = "free_y") +
scale_x_discrete(label_value = word) +
coord_flip() +
theme(legend.position="none")
?label_value
# top 10 most common words in each book
series %>%
anti_join(stop_words) %>%
group_by(book) %>%
count(word, sort = TRUE) %>%
top_n(10) %>%
ungroup() %>%
mutate(book = factor(book, levels = titles),
text_order = nrow(.):1) %>%
ggplot(aes(reorder(word, text_order), n, fill = book)) +
geom_bar(stat = "identity") +
facet_wrap(~ book, scales = "free_y") +
coord_flip() +
theme(legend.position="none")
?bind_rows
series %>%
mutate(word = str_extract(word, "[a-z]+")) %>%
count(word) %>%
transmute(word, all_words = n / sum(n))
series %>%
anti_join(stop_words) %>%
mutate(word = str_extract(word, "[a-z]+")) %>%
count(word) %>%
transmute(word, all_words = n / sum(n))
potter_pct <- series %>%
anti_join(stop_words) %>%
mutate(word = str_extract(word, "[a-z]+")) %>%
count(word) %>%
transmute(word, all_words = n / sum(n))
series %>%
anti_join(stop_words) %>%
mutate(word = str_extract(word, "[a-z]+")) %>%
count(book, word) %>%
mutate(other = n / sum(n)) %>%
left_join(potter_pct) %>%
ungroup()
# calculate percent of word use across all novels
potter_pct <- series %>%
anti_join(stop_words) %>%
mutate(word = str_extract(word, "[a-z]+")) %>%
count(word) %>%
transmute(word, all_words = n / sum(n))
frequency <- series %>%
anti_join(stop_words) %>%
mutate(word = str_extract(word, "[a-z]+")) %>%
count(book, word) %>%
mutate(book_words = n / sum(n)) %>%
left_join(potter_pct) %>%
arrange(desc(book_words)) %>%
ungroup()
frequency
# calculate percent of word use across all novels
potter_pct <- series %>%
anti_join(stop_words) %>%
#mutate(word = str_extract(word, "[a-z]+")) %>%
count(word) %>%
transmute(word, all_words = n / sum(n))
frequency <- series %>%
anti_join(stop_words) %>%
#mutate(word = str_extract(word, "[a-z]+")) %>%
count(book, word) %>%
mutate(book_words = n / sum(n)) %>%
left_join(potter_pct) %>%
arrange(desc(book_words)) %>%
ungroup()
frequency
# calculate percent of word use across all novels
potter_pct <- series %>%
anti_join(stop_words) %>%
#mutate(word = str_extract(word, "[a-z]+")) %>%
count(word) %>%
transmute(word, all_words = n / sum(n))
frequency <- series %>%
anti_join(stop_words) %>%
#mutate(word = str_extract(word, "[a-z]+")) %>%
count(book, word) %>%
mutate(book_words = n / sum(n)) %>%
left_join(potter_pct) %>%
arrange(desc(book_words)) %>%
ungroup()
frequency
ggplot(frequency, aes(x = book_words, y = all_words, color = abs(all_words - book_words))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~ book) +
theme(legend.position="none") +
labs(y = "Harry Potter Series", x = NULL)
ggplot(frequency, aes(x = book_words, y = all_words, color = abs(all_words - book_words))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = scales::percent_format()) +
scale_y_log10(labels = scales::percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~ book) +
theme(legend.position="none") +
labs(y = "Harry Potter Series", x = NULL)
frequency %>%
split_by(book)
frequency %>%
split_by(~book)
?split_by
frequency %>%
split_by("book")
?split
frequency %>%
split(book)
frequency %>%
split(., book)
frequency %>%
split(., book)
frequency %>%
split(.$book)
frequency %>%
split(.$book) %>%
map(~cor.test(~ book_words + all_words))
frequency %>%
split(.$book) %>%
map(~cor.test(book_words + all_words))
frequency %>%
split(.$book) %>%
map(cor.test(book_words + all_words))
frequency %>%
split(.$book) %>%
map(cor.test(~book_words + all_words))
frequency %>%
split(.$book)
frequency %>%
group_by(book) %>%
mutate(correlation = cor(book_words, all_words))
frequency %>%
group_by(book) %>%
summarize(correlation = cor(book_words, all_words))
cor.test(frequency$book_words, frequency$all_words)
str(cor.test(frequency$book_words, frequency$all_words))
cor.test(frequency$book_words, frequency$all_words)$p.value
frequency %>%
group_by(book) %>%
summarize(correlation = cor(book_words, all_words),
p_value = cor.test(book_words, all_words)$p.value)
summarize(correlation = cor(book_words + all_words),
frequency %>%
group_by(book) %>%
summarize(correlation = cor(book_words, all_words),
p_value = cor.test(book_words + all_words)$p.value)
frequency %>%
group_by(book) %>%
summarize(correlation = cor(book_words, all_words),
p_value = cor.test(~book_words + all_words)$p.value)
frequency %>%
group_by(book) %>%
summarize(correlation = cor(book_words, all_words),
p_value = cor.test(book_words, all_words)$p.value)
frequency %>%
group_by(book) %>%
summarize(correlation = cor(book_words, all_words),
p_value = cor.test(book_words, all_words)$p.value)
